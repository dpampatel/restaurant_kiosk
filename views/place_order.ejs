<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Document</title>
  <link rel="stylesheet" href="css/style.css" />
</head>

<body>
  <%- include('./partials/nav') %>
  <main>
    <header>
      <h1>PLACE ORDER</h1>
    </header>

    <div class="contact place_order">
      <form class="form" action="/place_order" method="POST">
        <fieldset>
          <!-- Customer Dropdown -->
          <div class="input-fields">
            <label for="customer">Customer:</label>
            <select name="customer" id="customer" required>
              <option value="" disabled selected>Select a customer</option>
              <% customers.forEach(customer => { %>
              <option value="<%= customer._id %>"><%= customer.FirstName %> <%= customer.LastName %></option>
              <% }); %>
            </select>
          </div>

          <!-- Order Form -->
          <div class="order-form" id="order-form">
            <!-- Order form items will be dynamically populated here -->
          </div>
          <br>
          <div class="input-fields btns">
            <button type="button" class="btn add-button" onclick="addPlaceholder()">Add Item</button>
            <button type="submit" class="btn place-order-button">Place Order</button>
          </div>
        </fieldset>
      </form>
    </div>
  </main>
  <%- include('./partials/footer') %>
  <script>
    let menuItems = JSON.parse('<%- JSON.stringify(menuItems) %>'); // Menu items data
    let itemCount = 1; // Counter for added placeholders

    async function fetchAvailability(itemId) {
      try {
        const response = await fetch(`/getAvailability?itemId=${itemId}`);
        const data = await response.json();
        return data.availableQuantity;
      } catch (error) {
        console.error("Error fetching availability:", error);
        return 0;
      }
    }

    async function addPlaceholder() {
      const orderForm = document.getElementById('order-form');
      const newItemIndex = itemCount;

      const newPlaceholder = document.createElement('div');
      newPlaceholder.className = 'product-card';
      newPlaceholder.innerHTML = `
        <div class="product-info">
          ${generateMenuItemDropdown(newItemIndex)}
        </div>
        <div class="quantity-control">
          <button class="icon-button minus-button" onclick="adjustQuantity(event, ${newItemIndex}, -1)">-</button>
          <p class="product-quantity">1</p>
          <button class="icon-button plus-button" onclick="adjustQuantity(event, ${newItemIndex}, 1)">+</button>
        </div>
        <input type="hidden" name="menuItems[${newItemIndex}].quantity" value="1">
      `;
      itemCount++;
      orderForm.appendChild(newPlaceholder);
    }

    function adjustQuantity(event, index, change) {
      event.preventDefault(); // Prevent form submission
      const quantityElement = document.querySelector(`#order-form .product-card:nth-child(${index}) .product-quantity`);
      const newQuantity = parseInt(quantityElement.textContent) + change;

      if (newQuantity >= 1) {
        quantityElement.textContent = newQuantity;

        // Update the hidden input value
        const hiddenInput = document.querySelector(`#order-form .product-card:nth-child(${index}) input[name^="menuItems"][name$="quantity"]`);
        hiddenInput.value = newQuantity;

        // Update the displayed price
        const menuItemDropdown = document.querySelector(`#order-form .product-card:nth-child(${index}) select`);
        const selectedItem = menuItems.find(item => item._id === menuItemDropdown.value);
        const priceElement = document.querySelector(`#menuPrice${index}`);

        if (selectedItem) {
          priceElement.textContent = `$${(selectedItem.Price * newQuantity).toFixed(2)}`;
        } else {
          priceElement.textContent = '$0.00'; // Set to default if no item is selected
        }
      }
    }


    function generateMenuItemDropdown(index) {
      return `
        <select name="menuItems[${index}].itemId" required onchange="updateMenuItemPrice(${index}, this.value)">
          <option value="" disabled selected>Select a menu item</option>
          ${menuItems.map(item => `
            <option value="${item._id}">${item.ItemName}</option>
          `).join('')}
        </select>
        <p class="product-price" id="menuPrice${index}">$0.00</p>
      `;
    }

    function updateMenuItemPrice(index, itemId) {
      const priceElement = document.querySelector(`#menuPrice${index}`);
      const selectedItem = menuItems.find(item => item._id === itemId);

      if (selectedItem) {
        priceElement.textContent = `$${selectedItem.Price.toFixed(2)}`;
      } else {
        priceElement.textContent = '$0.00';
      }
    }
    addPlaceholder();
  </script>
</body>

</html>